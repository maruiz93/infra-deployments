---
# simplified Loki configuration for development
deploymentMode: Distributed

# Service Account configuration to match SCC  
serviceAccount:
  create: false
  name: loki

# Basic Loki configuration
loki:
  commonConfig:
    replication_factor: 1  # Single-node development, data only exists once
    path_prefix: /var/loki  # This directory will be writable via volume mount
  storage:
    type: s3
    bucketNames:
      chunks: loki-data
      admin: loki-data
    s3:
      endpoint: loki-minio:9000
      region: us-east-1
      s3ForcePathStyle: true
      insecure: true
  schemaConfig:
    configs:
      - from: "2024-04-01"
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  ingester:
     chunk_encoding: snappy
  querier:
     # Default is 4, if you have enough memory and CPU you can increase, reduce if OOMing
     max_concurrent: 4
  pattern_ingester:
     enabled: false
  limits_config:
       retention_period: 744h  # 31 days retention
       ingestion_rate_mb: 10
       ingestion_burst_size_mb: 20
       max_streams_per_user: 0
       max_line_size: 256000
       reject_old_samples: true
       reject_old_samples_max_age: 168h
       discover_service_name: []
       allow_structured_metadata: true
       volume_enabled: true
       max_global_streams_per_user: 50000

# Security contexts for OpenShift
podSecurityContext:
  runAsNonRoot: false
  allowPrivilegeEscalation: false

containerSecurityContext:
  runAsNonRoot: false
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true  # Keep read-only root filesystem for security

# Disable test pods
test:
  enabled: false

# Disable sidecar completely to avoid loki-sc-rules container
sidecar:
  rules:
    enabled: false
  datasources:
    enabled: false

singleBinary:
  replicas: 0

# Zero out replica counts of other deployment modes
backend:
  replicas: 0
read:
  replicas: 0
write:
  replicas: 0

# Distributed components configuration
ingester:
  replicas: 2  # Multiple replicas for production-like testing
  maxUnavailable: 1
  autoscaling:
    enabled: false  # Disable during startup to avoid scaling conflicts
  zoneAwareReplication:
    enabled: false
  podDisruptionBudget:
    enabled: true
    minAvailable: 1  # Allow disruption of 1 pod when we have 2+
  resources:
    requests:
      cpu: 25m      # Minimal for development
      memory: 48Mi  # Minimal for single-node development
    limits:
      memory: 96Mi  # Minimal for single-node development
  persistence:
    enabled: true
    size: 5Gi     # Smaller volumes for local development
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution: []

querier:
  replicas: 2
  maxUnavailable: 1
  autoscaling:
    enabled: false  # Disable during startup to avoid scaling conflicts
  podDisruptionBudget:
    enabled: true
    minAvailable: 1  # Allow disruption of 1 pod when we have 2+
  resources:
    requests:
      cpu: 25m      # Minimal for development
      memory: 48Mi  # Minimal for single-node development
    limits:
      memory: 96Mi  # Minimal for single-node development
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution: []

queryFrontend:
  replicas: 2
  maxUnavailable: 1
  podDisruptionBudget:
    enabled: true
    minAvailable: 1
  resources:
    requests:
      cpu: 25m      # Reduced for local development
      memory: 32Mi  # Reduced for local development
    limits:
      memory: 64Mi  # Reduced for local development
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution: []

queryScheduler:
  replicas: 2
  maxUnavailable: 1
  podDisruptionBudget:
    enabled: true
    minAvailable: 1
  resources:
    requests:
      cpu: 25m      # Reduced for local development
      memory: 32Mi  # Reduced for local development
    limits:
      memory: 64Mi  # Reduced for local development
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution: []

distributor:
  replicas: 2  # Multiple replicas for realistic testing
  maxUnavailable: 1
  autoscaling:
    enabled: false  # Disable during startup to avoid scaling conflicts
  podDisruptionBudget:
    enabled: true
    minAvailable: 1  # Allow disruption of 1 pod when we have 2+
  resources:
    requests:
      cpu: 25m      # Minimal for development
      memory: 48Mi  # Minimal for single-node development
    limits:
      memory: 96Mi  # Minimal for single-node development
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution: []

compactor:
  replicas: 1
  podDisruptionBudget:
    enabled: false  # Single replica, no PDB needed
  resources:
    requests:
      cpu: 50m      # Reduced for local development
      memory: 64Mi  # Reduced for local development
    limits:
      memory: 128Mi # Reduced for local development

indexGateway:
  replicas: 2
  maxUnavailable: 1
  podDisruptionBudget:
    enabled: true
    minAvailable: 1
  resources:
    requests:
      cpu: 25m      # Minimal for development
      memory: 48Mi  # Minimal for single-node development
    limits:
      memory: 96Mi  # Minimal for single-node development
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution: []

ruler:
  replicas: 0

bloomPlanner:
  replicas: 0
bloomBuilder:
  replicas: 0
bloomGateway:
  replicas: 0

 # This exposes the Loki gateway so it can be written to and queried externaly

gateway:
  enabled: true
  replicas: 1
  podDisruptionBudget:
    enabled: false  # Single replica, no PDB needed
  affinity: {}
  image:
    registry: docker.io
    repository: nginxinc/nginx-unprivileged
    tag: 1.24-alpine
  resources:
    requests:
      cpu: 25m      # Reduced for local development
      memory: 32Mi  # Reduced for local development
    limits:
      memory: 64Mi  # Reduced for local development
  service:
    type: ClusterIP
    port: 80
  nginxConfig:
    resolver: "dns-default.openshift-dns.svc.cluster.local."

# Enable lokiCanary for health checks
lokiCanary:
  enabled: true
  podDisruptionBudget:
    enabled: false  # Single replica, no PDB needed
  resources:
    requests:
      cpu: 25m      # Reduced for local development
      memory: 32Mi  # Reduced for local development
    limits:
      memory: 64Mi  # Reduced for local development

# Enable minio for storage
minio:
  enabled: true
  rootUser: loki
  rootPassword: supersecret
  mode: standalone
  persistence:
    enabled: false  # Use emptyDir for development (no storage class available)
  resources:
    requests:
      cpu: 50m
      memory: 128Mi  # Increase from 64Mi to 128Mi
    limits:
      memory: 256Mi  # Increase from 128Mi to 256Mi

# Disable caches for development to save memory
chunksCache:
  enabled: false
resultsCache:
  enabled: false

# Resources for memcached exporter to satisfy linter  
memcachedExporter:
  enabled: false  # Disabled since we're not using memcached